[{"D:\\micompra.com\\frontend\\micompra.com\\src\\index.js":"1","D:\\micompra.com\\frontend\\micompra.com\\src\\components\\App.js":"2","D:\\micompra.com\\frontend\\micompra.com\\src\\components\\PageNotFound\\PageNotFound.js":"3","D:\\micompra.com\\frontend\\micompra.com\\src\\components\\HomePage\\HomePage.js":"4","D:\\micompra.com\\frontend\\micompra.com\\src\\components\\Login\\Login.js":"5","D:\\micompra.com\\frontend\\micompra.com\\src\\config\\config.js":"6","D:\\micompra.com\\frontend\\micompra.com\\src\\components\\Header\\Header.js":"7","D:\\micompra.com\\frontend\\micompra.com\\src\\components\\Sellers\\Sellers.js":"8","D:\\micompra.com\\frontend\\micompra.com\\src\\components\\Products\\Products.js":"9","D:\\micompra.com\\frontend\\micompra.com\\src\\components\\Product\\Product.js":"10","D:\\micompra.com\\frontend\\micompra.com\\src\\components\\AddProduct\\AddProduct.js":"11","D:\\micompra.com\\frontend\\micompra.com\\src\\components\\ShoppingCart\\ShoppingCart.js":"12","D:\\micompra.com\\frontend\\micompra.com\\src\\components\\CartProduct\\CartProduct.js":"13","D:\\micompra.com\\frontend\\micompra.com\\src\\components\\ShoppingCart\\ShoppingCartPage.js":"14","D:\\micompra.com\\frontend\\micompra.com\\src\\components\\SignUp\\SignUp.js":"15"},{"size":494,"mtime":1607553290270,"results":"16","hashOfConfig":"17"},{"size":1487,"mtime":1607623164483,"results":"18","hashOfConfig":"17"},{"size":815,"mtime":1607490932698,"results":"19","hashOfConfig":"17"},{"size":1380,"mtime":1607612890426,"results":"20","hashOfConfig":"17"},{"size":4635,"mtime":1607623216032,"results":"21","hashOfConfig":"17"},{"size":170,"mtime":1607627501199,"results":"22","hashOfConfig":"17"},{"size":1579,"mtime":1607622282588,"results":"23","hashOfConfig":"17"},{"size":1267,"mtime":1607577802779,"results":"24","hashOfConfig":"17"},{"size":1856,"mtime":1607576817404,"results":"25","hashOfConfig":"17"},{"size":2540,"mtime":1607610340803,"results":"26","hashOfConfig":"17"},{"size":2086,"mtime":1607612858489,"results":"27","hashOfConfig":"17"},{"size":5268,"mtime":1607621239632,"results":"28","hashOfConfig":"17"},{"size":4456,"mtime":1607618786082,"results":"29","hashOfConfig":"17"},{"size":1105,"mtime":1607616202469,"results":"30","hashOfConfig":"17"},{"size":6400,"mtime":1607627650660,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1fcozpg",{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\micompra.com\\frontend\\micompra.com\\src\\index.js",[],["69","70"],"D:\\micompra.com\\frontend\\micompra.com\\src\\components\\App.js",["71","72","73"],"D:\\micompra.com\\frontend\\micompra.com\\src\\components\\PageNotFound\\PageNotFound.js",[],"D:\\micompra.com\\frontend\\micompra.com\\src\\components\\HomePage\\HomePage.js",["74","75","76"],"import React, {Component} from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Header from '../Header/Header';\r\nimport Sellers from '../Sellers/Sellers';\r\nimport Products from '../Products/Products';\r\nimport ShoppingCart from '../ShoppingCart/ShoppingCart';\r\nimport config from '../../config/config'\r\nimport axios from 'axios';\r\nclass HomePage extends Component{\r\n    state = {\r\n        seller: \"\",\r\n    }\r\n    getSeller = (seller) => {\r\n        this.setState({seller});\r\n       \r\n        \r\n    }\r\n\r\n    \r\n    render(){\r\n        let user = JSON.parse(sessionStorage.getItem('user'));\r\n        if(Object.entries(user).length<1)\r\n        {\r\n            \r\n            console.log(JSON.parse(sessionStorage.getItem('user')));\r\n\r\n            return(\r\n                <Redirect to={'/login'}/>\r\n            );\r\n        }\r\n        else\r\n            return(\r\n                <div>\r\n                    <Header/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3\">\r\n                            <Sellers getSeller={this.getSeller}/>\r\n                        </div>\r\n                        <div className=\"col-md-9\">\r\n                            <Products seller={this.state.seller}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n    \r\n    \r\n}\r\nexport default HomePage;","D:\\micompra.com\\frontend\\micompra.com\\src\\components\\Login\\Login.js",["77","78","79","80","81","82","83"],"D:\\micompra.com\\frontend\\micompra.com\\src\\config\\config.js",[],"D:\\micompra.com\\frontend\\micompra.com\\src\\components\\Header\\Header.js",["84","85"],"D:\\micompra.com\\frontend\\micompra.com\\src\\components\\Sellers\\Sellers.js",["86"],"import React, {Component} from 'react';\r\nimport config from '../../config/config'\r\nimport axios from 'axios';\r\nclass Sellers extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            sellers: []\r\n        }\r\n        \r\n    }\r\n  \r\n    getSellers(){\r\n        let user = JSON.parse(sessionStorage.getItem('user'));\r\n        let token = user.token;\r\n        let response = axios({\r\n            method: 'get',\r\n            url: `${config.base_url}/sellers`,\r\n            headers: {\r\n                token\r\n            }\r\n        });\r\n        return response;\r\n    }\r\n    async componentDidMount() {\r\n        let response = await this.getSellers();\r\n        this.setState({sellers:response.data});\r\n    }\r\n    render(){\r\n        const {getSeller} = this.props;\r\n        return(\r\n            <div>\r\n                <h1>Vendedores</h1>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    {this.state.sellers.map( (e, i) =>{\r\n                        return <a href=\"#\"  key={`sellers${i}`} onClick={() => getSeller(e._id)} ><li  className=\"list-group-item\">{e.businessName}</li></a>    \r\n                    })}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Sellers;","D:\\micompra.com\\frontend\\micompra.com\\src\\components\\Products\\Products.js",[],"D:\\micompra.com\\frontend\\micompra.com\\src\\components\\Product\\Product.js",["87","88"],"import React, {Component} from 'react';\r\nimport AddProduct from '../AddProduct/AddProduct';\r\n/*classNameName Product extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n    return(<h1>{this.props.name}</h1>);\r\n    }\r\n}*/\r\n\r\nfunction Product(props){\r\n    return(\r\n        <div className=\"col-md-4\">\r\n            <div className=\"card\" >\r\n                <img className=\"card-img-top\" src={props.imgUrl} alt=\"Card image cap\"/>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{props.name}</h5>\r\n                    <p className=\"card-text\">{props.description}</p>\r\n                    <h6 className=\"card-title\">Precio: ${props.unitaryPrice}</h6>\r\n                    \r\n                    <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target={`#producto${props.id}`}>\r\n                        Agregar a carrito\r\n                    </button>\r\n\r\n                    \r\n                    <div className=\"modal fade\" id={`producto${props.id}`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">{props.name}</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <AddProduct \r\n                                product_id = {props.id}\r\n                                product_name = {props.name}\r\n                                product_img = {props.imgUrl}\r\n                                product_price = {props.unitaryPrice}\r\n                                product_description = {props.description}\r\n                            />\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Product;","D:\\micompra.com\\frontend\\micompra.com\\src\\components\\AddProduct\\AddProduct.js",[],"D:\\micompra.com\\frontend\\micompra.com\\src\\components\\ShoppingCart\\ShoppingCart.js",["89","90","91","92"],"import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport config from '../../config/config'\r\nimport CartProduct from '../CartProduct/CartProduct';\r\nimport Header from '../Header/Header';\r\nimport { Redirect } from 'react-router-dom';\r\nclass ShoppingCart extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            products: [],\r\n            bill: 0\r\n        }\r\n    }\r\n    getCart(){\r\n        let user = JSON.parse(sessionStorage.getItem('user'));\r\n        let token = user.token;\r\n        const user_id = user.user_info.id;\r\n        let response = axios({\r\n            method: 'get',\r\n            url: `${config.base_url}/cart/products?user_id=${user_id}`,\r\n            headers: {\r\n                token\r\n            }\r\n        });\r\n        return response;\r\n    }\r\n    async componentDidMount() {\r\n        let response = await this.getCart();\r\n        this.setState({products:response.data});\r\n        this.getBill();\r\n    }\r\n\r\n    /*async componentDidUpdate(prevProps, prevState){\r\n        if (prevState.update_cart !== this.state.update_cart) {\r\n            let response = await this.getCart();\r\n            this.setState({products:response.data});\r\n        }\r\n    }*/\r\n    deleteCart = async () => {\r\n        let confirmation = window.confirm(\"Está seguro que desea eliminar todos los productos?\");\r\n        const user = JSON.parse(sessionStorage.getItem(\"user\"));\r\n        const token = user.token;\r\n        const id_user = user.user_info.id;\r\n        if(confirmation){\r\n            let response = await axios({\r\n                method: 'delete',\r\n                url: `${config.base_url}/cart?id_user=${id_user}`,\r\n                headers: {\r\n                    token\r\n                }\r\n            });\r\n            if(response.data==true){\r\n                this.setState({products: []});\r\n                alert(\"Todos los productos se elminiaron exitosamente\");\r\n            }else{\r\n                alert(\"No hay productos por borrar\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    updateCart = async (update)=>{\r\n        if(update){\r\n            let response = await this.getCart();\r\n            this.setState({products:response.data});\r\n            this.getBill();\r\n        }\r\n    }\r\n\r\n    async getBill(){\r\n        let bill = 0;\r\n        this.state.products.map(e=>{\r\n            bill += e.amount* e.id_product.unitaryPrice;\r\n        });\r\n        this.setState({bill});\r\n    }\r\n\r\n    purchase = async ()=>{\r\n        let confirmation = window.confirm(\"Desea confirmar la compra?\");\r\n        const user = JSON.parse(sessionStorage.getItem(\"user\"));\r\n        const token = user.token;\r\n        const user_id = user.user_info.id;\r\n\r\n        //Date\r\n        let newDate = new Date()\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        let separator = \"/\";\r\n        let fullDate = `${year}${separator}${month<10?`0${month}`:`${month}`}${separator}${date}`;\r\n        \r\n        if(confirmation){\r\n            let response = await axios({\r\n                method: 'post',\r\n                url: `${config.base_url}/cart/purchase`,\r\n                headers: {\r\n                    token\r\n                },\r\n                data: {\r\n                    user_id,\r\n                    date: fullDate\r\n                }\r\n            });\r\n            if(response.data==true){\r\n                this.setState({products: []});\r\n                this.getBill();\r\n                alert(\"Compra exitosa\");\r\n            }else{\r\n                alert(\"No hay productos en el carrito\");\r\n            }\r\n        }\r\n    }\r\n    render(){\r\n        \r\n            return(\r\n                <div>\r\n                    <Header/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <h1>Carrito</h1>\r\n                        </div>\r\n                        <div style={{margin: '5px 0 0 0'}} className=\"col-md-2\">\r\n                            <button className=\"btn btn-danger\" onClick={this.deleteCart}>Borrar Todo</button>\r\n                        </div>\r\n                        <div style={{margin: '5px 0 0 0'}} className=\"col-md-2\">\r\n                            <button className=\"btn btn-success\" onClick={this.purchase}>Comprar</button>\r\n                        </div>\r\n                        <div style={{margin: '5px 0 0 0'}} className=\"col-md-6\">\r\n                            <h3><b>Total a Pagar: $</b>{this.state.bill}</h3>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div id=\"accordion\">\r\n                        {this.state.products.map((e,i)=>{\r\n                            return <CartProduct\r\n                                key={i}\r\n                                id={e._id}\r\n                                product_name={e.id_product.name}\r\n                                amount={e.amount}\r\n                                unitary_price={e.id_product.unitaryPrice}\r\n                                updateCart={this.updateCart}\r\n                            />\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n}\r\nexport default ShoppingCart;","D:\\micompra.com\\frontend\\micompra.com\\src\\components\\CartProduct\\CartProduct.js",["93"],"import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport config from '../../config/config'\r\nclass CartProduct extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            totalPrice: 0,\r\n            amount : parseInt(this.props.amount)\r\n        }\r\n        \r\n    }\r\n    componentDidMount(){\r\n        let totalPrice = this.props.unitary_price*parseInt(this.state.amount);\r\n        this.setState({totalPrice});\r\n    }\r\n\r\n    handleAmount = (e) =>{\r\n        let amount = parseInt(e.currentTarget.value);\r\n        if(amount>0)\r\n            this.setState({amount});   \r\n    }\r\n\r\n    deleteProduct = async ()=>{\r\n        const {updateCart} = this.props;\r\n        let confirmation = window.confirm(\"Está seguro que desea eliminar el producto?\");\r\n        let user = JSON.parse(sessionStorage.getItem('user'));\r\n        const token = user.token;\r\n        if(confirmation){\r\n            let response = await axios({\r\n                method: 'delete',\r\n                url: `${config.base_url}/cart/product?id=${this.props.id}`,\r\n                headers: {\r\n                    token\r\n                }\r\n            });\r\n            if(response.data==true){\r\n                alert(\"El producto se eliminó exitosamente\");\r\n                updateCart(true);\r\n            }else{\r\n                alert(\"No se pudo borrar el producto\");\r\n            }\r\n        }\r\n    }\r\n\r\n    updateAmount = async ()=>{\r\n        const {updateCart} = this.props;\r\n        let confirmation = window.confirm(\"Está seguro que desea actualizar la cantidad del producto?\");\r\n        let user = JSON.parse(sessionStorage.getItem('user'));\r\n        const token = user.token;\r\n        if(confirmation){\r\n            let response = await axios({\r\n                method: 'put',\r\n                url: `${config.base_url}/cart/product/amount`,\r\n                headers: {\r\n                    token\r\n                },\r\n                data: {\r\n                    id: this.props.id,\r\n                    amount : this.state.amount\r\n                }\r\n            });\r\n            if(response!=null){\r\n                alert(\"El producto se actualizó exitosamente\");\r\n                updateCart(true);\r\n            }else{\r\n                alert(\"No se pudo actualizar el producto\");\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"card\">\r\n                        <div className=\"card-header\" id={`heading${this.props.id}`}>\r\n                        <h5 className=\"mb-0\">\r\n                            <button className=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target={`#collapse${this.props.id}`} aria-expanded=\"false\" aria-controls={`collapse${this.props.id}`}>\r\n                                {this.props.product_name}\r\n                            </button>\r\n                        </h5>\r\n                        </div>\r\n                        <div id={`collapse${this.props.id}`} className=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordion\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n                                    <b><span>Precio Unitario: </span></b><span>${this.props.unitary_price}</span><br/>\r\n                                    <b><span>Precio Total: </span></b><span>${this.state.totalPrice}</span>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-10\">\r\n                                            <b>Cantidad: </b><input type=\"number\" onChange={this.handleAmount} className=\"form-control\" value={this.state.amount}/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-8\">\r\n                                    <button className=\"btn btn-danger\" onClick={this.deleteProduct}>Borrar Producto</button><br/> <br/>\r\n                                    <button className=\"btn btn-primary\" onClick={this.updateAmount}>Actualizar Cantidad</button>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n\r\n                        \r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default CartProduct;","D:\\micompra.com\\frontend\\micompra.com\\src\\components\\ShoppingCart\\ShoppingCartPage.js",["94","95","96","97","98"],"import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport config from '../../config/config'\r\nimport CartProduct from '../CartProduct/CartProduct';\r\nimport Header from '../Header/Header';\r\nimport ShoppingCart from './ShoppingCart';\r\nimport { Redirect } from 'react-router-dom';\r\nclass ShoppingCartPage extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        \r\n    }\r\n   \r\n\r\n    /*async componentDidUpdate(prevProps, prevState){\r\n        if (prevState.update_cart !== this.state.update_cart) {\r\n            let response = await this.getCart();\r\n            this.setState({products:response.data});\r\n        }\r\n    }*/\r\n\r\n\r\n    render(){\r\n        \r\n        let user = JSON.parse(sessionStorage.getItem('user'));\r\n        if(Object.entries(user).length<1)\r\n        {\r\n            \r\n            console.log(JSON.parse(sessionStorage.getItem('user')));\r\n\r\n            return(\r\n                <Redirect to={'/login'}/>\r\n            );\r\n        }\r\n        else\r\n            return(\r\n                <ShoppingCart/>\r\n            );\r\n    }\r\n}\r\nexport default ShoppingCartPage;","D:\\micompra.com\\frontend\\micompra.com\\src\\components\\SignUp\\SignUp.js",["99","100","101","102","103"],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":2,"column":49,"nodeType":"110","messageId":"111","endLine":2,"endColumn":53},{"ruleId":"108","severity":1,"message":"112","line":2,"column":55,"nodeType":"110","messageId":"111","endLine":2,"endColumn":63},{"ruleId":"108","severity":1,"message":"113","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":21},{"ruleId":"108","severity":1,"message":"114","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":20},{"ruleId":"108","severity":1,"message":"115","line":7,"column":8,"nodeType":"110","messageId":"111","endLine":7,"endColumn":14},{"ruleId":"108","severity":1,"message":"116","line":8,"column":8,"nodeType":"110","messageId":"111","endLine":8,"endColumn":13},{"ruleId":"108","severity":1,"message":"117","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":13},{"ruleId":"108","severity":1,"message":"118","line":5,"column":8,"nodeType":"110","messageId":"111","endLine":5,"endColumn":17},{"ruleId":"108","severity":1,"message":"119","line":6,"column":10,"nodeType":"110","messageId":"111","endLine":6,"endColumn":14},{"ruleId":"108","severity":1,"message":"120","line":8,"column":8,"nodeType":"110","messageId":"111","endLine":8,"endColumn":16},{"ruleId":"121","severity":1,"message":"122","line":42,"column":28,"nodeType":"123","messageId":"124","endLine":42,"endColumn":30},{"ruleId":"108","severity":1,"message":"125","line":69,"column":13,"nodeType":"110","messageId":"111","endLine":69,"endColumn":17},{"ruleId":"121","severity":1,"message":"126","line":110,"column":33,"nodeType":"123","messageId":"124","endLine":110,"endColumn":35},{"ruleId":"108","severity":1,"message":"117","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":13},{"ruleId":"127","severity":1,"message":"128","line":16,"column":66,"nodeType":"129","endLine":16,"endColumn":95},{"ruleId":"130","severity":1,"message":"131","line":36,"column":32,"nodeType":"129","endLine":36,"endColumn":99},{"ruleId":"108","severity":1,"message":"132","line":1,"column":16,"nodeType":"110","messageId":"111","endLine":1,"endColumn":25},{"ruleId":"133","severity":1,"message":"134","line":16,"column":17,"nodeType":"129","endLine":16,"endColumn":88},{"ruleId":"108","severity":1,"message":"112","line":6,"column":10,"nodeType":"110","messageId":"111","endLine":6,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":53,"column":29,"nodeType":"123","messageId":"124","endLine":53,"endColumn":31},{"ruleId":"135","severity":1,"message":"136","line":73,"column":34,"nodeType":"137","messageId":"138","endLine":73,"endColumn":36},{"ruleId":"121","severity":1,"message":"122","line":105,"column":29,"nodeType":"123","messageId":"124","endLine":105,"endColumn":31},{"ruleId":"121","severity":1,"message":"122","line":37,"column":29,"nodeType":"123","messageId":"124","endLine":37,"endColumn":31},{"ruleId":"108","severity":1,"message":"116","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":13},{"ruleId":"108","severity":1,"message":"115","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":14},{"ruleId":"108","severity":1,"message":"139","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":19},{"ruleId":"108","severity":1,"message":"140","line":5,"column":8,"nodeType":"110","messageId":"111","endLine":5,"endColumn":14},{"ruleId":"141","severity":1,"message":"142","line":9,"column":5,"nodeType":"143","messageId":"144","endLine":12,"endColumn":6},{"ruleId":"108","severity":1,"message":"117","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":13},{"ruleId":"108","severity":1,"message":"118","line":5,"column":8,"nodeType":"110","messageId":"111","endLine":5,"endColumn":17},{"ruleId":"108","severity":1,"message":"119","line":6,"column":10,"nodeType":"110","messageId":"111","endLine":6,"endColumn":14},{"ruleId":"108","severity":1,"message":"120","line":8,"column":8,"nodeType":"110","messageId":"111","endLine":8,"endColumn":16},{"ruleId":"121","severity":1,"message":"122","line":131,"column":23,"nodeType":"123","messageId":"124","endLine":131,"endColumn":25},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'shopping_cart' is defined but never used.","'ShoppingCart' is defined but never used.","'config' is defined but never used.","'axios' is defined but never used.","'style' is defined but never used.","'validator' is defined but never used.","'data' is defined but never used.","'HomePage' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'user' is assigned a value but never used.","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Component' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'CartProduct' is defined but never used.","'Header' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]